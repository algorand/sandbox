version: '3'

services:
  algod:
    container_name: "algorand-${CONFIG_NAME}-algod"
    build:
      context: .
      dockerfile: ./images/algod/Dockerfile
      args:
        CHANNEL: "${ALGOD_CHANNEL}"
        URL: "${ALGOD_URL}"
        BRANCH: "${ALGOD_BRANCH}"
        SHA: "${ALGOD_SHA}"
        BOOTSTRAP_URL: "${NETWORK_BOOTSTRAP_URL}"
        GENESIS_FILE: "${NETWORK_GENESIS_FILE}"
        TEMPLATE: "${NETWORK_TEMPLATE:-images/algod/template.json}"
        TOKEN: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        ALGOD_PORT: "${ALGOD_PORT}"
        KMD_PORT: "${KMD_PORT}"
        TEALDBG_PORT: "${TEALDBG_PORT}"
    ports:
      - ${ALGOD_PORT}:${ALGOD_PORT}
      - ${KMD_PORT}:${KMD_PORT}
      - ${TEALDBG_PORT}:${TEALDBG_PORT}

  indexer:
    container_name: "algorand-${CONFIG_NAME}-indexer"
    build:
      context: .
      dockerfile: ./images/indexer/Dockerfile
      args:
        URL: "${INDEXER_URL}"
        BRANCH: "${INDEXER_BRANCH}"
        SHA: "${INDEXER_SHA}"
    ports:
      - ${INDEXER_PORT}:${INDEXER_PORT}
    restart: unless-stopped
    environment:
      DISABLED: "${INDEXER_DISABLED}"
      PORT: "${INDEXER_PORT}"
      SNAPSHOT: ""
      CONNECTION_STRING: "host=indexer-db port=5432 user=algorand password=algorand dbname=indexer_db sslmode=disable"
      ALGOD_ADDR: "algod:${ALGOD_PORT}"
      ALGOD_TOKEN: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    depends_on:
      - indexer-db
      - algod

  indexer-db:
    image: "postgres:13-alpine"
    container_name: "algorand-${CONFIG_NAME}-postgres"
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    user: postgres
    environment:
      POSTGRES_USER: algorand
      POSTGRES_PASSWORD: algorand
      POSTGRES_DB: indexer_db
