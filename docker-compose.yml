version: '3'

services:

  algod:
    container_name: "algorand-sandbox-algod"
    hostname: algod.server
    build:
      context: .
      dockerfile: ./images/algod/Dockerfile
      args:
        CHANNEL: "${ALGOD_CHANNEL}"
        URL: "${ALGOD_URL}"
        BRANCH: "${ALGOD_BRANCH}"
        SHA: "${ALGOD_SHA}"
        BOOTSTRAP_URL: "${NETWORK_BOOTSTRAP_URL}"
        GENESIS_FILE: "${NETWORK_GENESIS_FILE}"
        TEMPLATE: "${NETWORK_TEMPLATE:-/tmp/images/algod/template.json}"
        TOKEN: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        ALGOD_PORT: "4001"
        KMD_PORT: "4002"
    ports:
      - 4001:4001
      - 4002:4002

  indexer:
    container_name: "algorand-sandbox-indexer"
    hostname: indexer.server
    build:
      context: .
      dockerfile: ./images/indexer/Dockerfile
      args:
        URL: "${INDEXER_URL}"
        BRANCH: "${INDEXER_BRANCH}"
        SHA: "${INDEXER_SHA}"
    ports:
      - 8980:8980
    restart: unless-stopped
    environment:
      DISABLED: "${INDEXER_DISABLED}"
      PORT: "8980"
      SNAPSHOT: ""
      CONNECTION_STRING: "host=indexer-db port=5432 user=algorand password=algorand dbname=indexer_db sslmode=disable"
      ALGOD_ADDR: "algod:4001"
      ALGOD_TOKEN: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    depends_on:
      - indexer-db
      - algod

  indexer-db:
    image: "postgres:13-alpine"
    container_name: "algorand-sandbox-postgres"
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: algorand
      POSTGRES_PASSWORD: algorand
      POSTGRES_DB: indexer_db

  algosearch:
    container_name: "algorand-sandbox-algosearch"
    build:
      context: .
      dockerfile: ./images/search/Dockerfile
      args:
        URL: "${ALGOSEARCH_URL}"
        BRANCH: "${ALGOSEARCH_BRANCH}"
        SHA: "${ALGOSEARCH_SHA}"
    ports:
      - 8000:8000
    depends_on:
      - search-db
      - algod
      - indexer

  search-db:
    image: couchdb:2.3.1
    container_name: "algorand-sandbox-couchdb"
    hostname: couchdb.server
    ports:
      - "5984:5984"
    # Optional
    # volumes:
    #   - ./db-data:/opt/couchdb/data
    # extra_hosts:
    #   - "dockerhost:$DOCKERHOST"
    # https://github.com/apache/couchdb-docker/issues/54
    # command: curl -u admin:password -X PUT 127.0.0.1:5984/_users && curl -u admin:password -X PUT 127.0.0.1:5984/test
    environment:
      - COUCHDB_USER=algorand
      - COUCHDB_PASSWORD=algorand
